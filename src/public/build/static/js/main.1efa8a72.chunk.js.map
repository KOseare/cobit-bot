{"version":3,"sources":["containers/ChatInterface/ChatInterface.module.css","containers/ChatInterface/ChatInput/ChatInput.module.css","containers/ChatDescription/ChatDescription.module.css","containers/ChatInterface/DialogueBubble/DialogueBubble.module.css","containers/ChatInterface/DialogueBubble/DialogueBubble.js","containers/ChatInterface/ChatInput/ChatInput.js","containers/ChatInterface/ChatInterface.js","utils/settings.js","containers/ChatDescription/ChatDescription.js","App.js","index.js","App.module.css"],"names":["module","exports","DialogueBubble","props","BubbleClasses","classes","speaker","push","UserBubble","ChatbotBubble","className","BubbleContainer","join","children","ChatInput","type","placeholder","onChange","onTyping","value","onKeyUp","e","keyCode","preventDefault","onPressButton","onClick","ChatInterface","useState","userMessage","setUserMessage","text","messages","setMessages","dialogBoxRef","useRef","socket","useEffect","current","SocketIOClient","on","data","forEach","message","prevState","scrollTop","scrollHeight","DialogBox","ref","map","index","key","target","length","emit","Description","ChatDescription","href","rel","App","appRef","goToChatHandler","going","scrollLeft","scrollWidth","ButtonNavigator","ChatContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1efa8a72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatInterface\":\"ChatInterface_ChatInterface__2Ib4f\",\"DialogBox\":\"ChatInterface_DialogBox__gil__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatInput\":\"ChatInput_ChatInput__3KrGO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatDescription\":\"ChatDescription_ChatDescription__377KO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BubbleContainer\":\"DialogueBubble_BubbleContainer__dzpdl\",\"DialogueBubble\":\"DialogueBubble_DialogueBubble__G735e\",\"UserBubble\":\"DialogueBubble_UserBubble__xKh6F\",\"ChatbotBubble\":\"DialogueBubble_ChatbotBubble__2ZcS9\"};","import React from 'react';\r\nimport classes from \"./DialogueBubble.module.css\";\r\n\r\nconst DialogueBubble = (props) => {\r\n\r\n    const BubbleClasses = [classes.DialogueBubble];\r\n    if(props.speaker === \"USER\"){\r\n        BubbleClasses.push(classes.UserBubble);\r\n    }\r\n    else if(props.speaker === \"CHATBOT\" ){\r\n        BubbleClasses.push(classes.ChatbotBubble);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.BubbleContainer}>\r\n            <p className={BubbleClasses.join(\" \")}>\r\n                {props.children}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogueBubble\r\n","import React from 'react'\r\nimport classes from \"./ChatInput.module.css\";\r\n\r\nconst ChatInput = (props) => {\r\n    return (\r\n        <div className={classes.ChatInput}>\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"Escriba su pregunta\" \r\n                onChange={props.onTyping} \r\n                value={props.value}\r\n                onKeyUp={(e) => {\r\n                    if (e.keyCode === 13) {\r\n                        e.preventDefault();\r\n                        props.onPressButton();\r\n                    }\r\n                }}\r\n            />\r\n            <button onClick={props.onPressButton}>Enviar</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatInput\r\n","import React, {useState, useRef, useEffect} from 'react';\r\nimport classes from \"./ChatInterface.module.css\";\r\nimport DialogueBubble from \"./DialogueBubble/DialogueBubble\";\r\nimport ChatInput from \"./ChatInput/ChatInput\";\r\nimport SocketIOClient from \"socket.io-client\";\r\nimport {serverIp} from \"../../utils/settings\";\r\n\r\nconst ChatInterface = () => {\r\n    const [userMessage, setUserMessage] = useState(\"\");\r\n    const [messages, setMessages] = useState([{\r\n        speaker: \"CHATBOT\", \r\n        text: \"ChatBot: Hola soy un chatbot con información sobre la Covid-19, pregunteme lo que quiera saber sobre el virus.\"\r\n    }]);\r\n    const dialogBoxRef = useRef();\r\n    const socket = useRef();\r\n\r\n    const onTypingHandler = (e) => {\r\n        setUserMessage(e.target.value);\r\n    }\r\n    const sendMessageHandler = () => {\r\n        if(userMessage.length > 0){\r\n            socket.current.emit(\"chat:message\", {\r\n                message: userMessage\r\n            });\r\n\r\n            setMessages(prevState => [...prevState, {\r\n                speaker: \"USER\",\r\n                text: `Yo: ${userMessage}`\r\n            }])\r\n            setUserMessage(\"\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.current = SocketIOClient(serverIp);\r\n        socket.current.on(\"chat:message\", (data) => {\r\n            data.messages.forEach(message => {\r\n                setMessages(prevState => [...prevState, {\r\n                    speaker: \"CHATBOT\",\r\n                    text: `Chatbot: ${message}`\r\n                }]);\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dialogBoxRef.current.scrollTop = dialogBoxRef.current.scrollHeight;\r\n    }, [dialogBoxRef, messages]);\r\n\r\n    return (\r\n        <div className={classes.ChatInterface}>\r\n            <div className={classes.DialogBox} ref={dialogBoxRef}>\r\n                {\r\n                    messages.map((message, index) => (\r\n                        <DialogueBubble key={index} speaker={message.speaker}>\r\n                            {message.text}\r\n                        </DialogueBubble>\r\n                    ))\r\n                }\r\n            </div>\r\n            <ChatInput \r\n                value={userMessage}\r\n                onTyping={onTypingHandler}\r\n                onPressButton={sendMessageHandler}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatInterface;\r\n","// export const serverIp = \"http://192.168.100.4:5500/\";\r\nexport const serverIp = \"https://covid-kchatbot-server.herokuapp.com/\";","import React from 'react';\r\nimport classes from \"./ChatDescription.module.css\";\r\n\r\nconst Description = () => {\r\n    return (\r\n        <div className={classes.ChatDescription}>\r\n            <header>\r\n                <h3>\r\n                    Covid-Bot\r\n                </h3>\r\n                <div>\r\n                    \r\n                </div>\r\n            </header>\r\n            <section>\r\n                <p>\r\n                    Este es un ChatBot en desarrollo, si quiere información mas detallada \r\n                    haga <a href=\"https://www.who.int/es/emergencies/diseases/novel-coronavirus-2019\" target=\"_blank\" rel=\"noopener noreferrer\">Click aquí</a>\r\n                </p>\r\n                \r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Description;\r\n","import React, {useRef} from 'react';\nimport classes from  './App.module.css';\nimport ChatInterface from \"./containers/ChatInterface/ChatInterface\";\nimport ChatDescription from \"./containers/ChatDescription/ChatDescription\";\nimport {\n  IoIosArrowForward as IoArrowForward, \n  IoIosArrowBack as IoArrowBack\n} from \"react-icons/io\";\n\nconst App = () => {\n  const appRef = useRef();\n\n  const goToChatHandler = (going) => {\n    if(going){\n      appRef.current.scrollLeft = appRef.current.scrollWidth;\n    }\n    else{\n      appRef.current.scrollLeft = 0;\n    }\n  }\n\n  return (\n    <div className={classes.App} ref={appRef}>\n      <div className={classes.ButtonNavigator}>\n        <button onClick={() => goToChatHandler(true)}>\n          <p>Ir al Chat</p>\n          <IoArrowForward />\n        </button>\n        <button onClick={() => goToChatHandler(false)}>\n          <IoArrowBack />\n          <p>Ir a la descripción</p>\n        </button>\n      </div>\n      <div className={classes.ChatContainer}>\n        <ChatInterface />\n        <ChatDescription />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__wVoBD\",\"ChatContainer\":\"App_ChatContainer__229st\",\"ButtonNavigator\":\"App_ButtonNavigator__2Nai6\"};"],"sourceRoot":""}